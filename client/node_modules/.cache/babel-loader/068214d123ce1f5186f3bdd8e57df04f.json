{"ast":null,"code":"import axios from \"axios\"; // eslint-disable-next-line\n\nexport default {\n  // ZOMATO API CALL\n  getRestaurants(lat, lon) {\n    return axios.get(\"https://developers.zomato.com/api/v2.1/search?query=Chelsea&lat=\".concat(lat, \"&lon=\").concat(lon, \"&count=10\"), {\n      headers: {\n        \"user-key\": process.env.REACT_APP_ZOMATO_API_KEY\n      }\n    });\n  },\n\n  // SeatGeek API Call  \n  getEvents() {\n    return axios.get(\"https://api.seatgeek.com/2/events?&client_id=\".concat(process.env.REACT_APP_SEATGEEK_API_KEY));\n  },\n\n  getFoods: function getFoods() {\n    return axios.get(\"/api/foods\");\n  },\n  getFood: function getFood(id) {\n    return axios.get(\"/api/foods/\" + id);\n  },\n  saveFoods: function saveFoods(foodData) {\n    return axios.post(\"/api/foods\", foodData);\n  },\n  editFoods: function editFoods(id, foodData) {\n    return axios.put(\"/api/foods/\" + id, foodData);\n  },\n\n  deleteFoods(id) {\n    return axios.delete(\"/api/foods/\" + id);\n  },\n\n  getEventsDB: function getEventsDB() {\n    return axios.get(\"/api/events\");\n  },\n  editEvents: function editEvents(id, eventsData) {\n    return axios.put(\"/api/foods/\" + id, eventsData);\n  },\n  saveEvents: function saveEvents(eventsData) {\n    return axios.post(\"/api/events\", eventsData);\n  },\n\n  deleteEvents(id) {\n    return axios.delete(\"/api/events/\" + id);\n  }\n\n};","map":{"version":3,"sources":["/Users/lindsey/Desktop/Rutgers/Part Two/Project 3 /axolotl/client/src/utils/API.js"],"names":["axios","getRestaurants","lat","lon","get","headers","process","env","REACT_APP_ZOMATO_API_KEY","getEvents","REACT_APP_SEATGEEK_API_KEY","getFoods","getFood","id","saveFoods","foodData","post","editFoods","put","deleteFoods","delete","getEventsDB","editEvents","eventsData","saveEvents","deleteEvents"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,eAAe;AACX;AACAC,EAAAA,cAAc,CAACC,GAAD,EAAMC,GAAN,EAAU;AAChB,WAAOH,KAAK,CAACI,GAAN,2EAA6EF,GAA7E,kBAAwFC,GAAxF,gBAAuG;AAC1GE,MAAAA,OAAO,EAAE;AAAC,oBAAYC,OAAO,CAACC,GAAR,CAAYC;AAAzB;AADiG,KAAvG,CAAP;AAIC,GAPE;;AAQZ;AACCC,EAAAA,SAAS,GAAE;AACT,WAAOT,KAAK,CAACI,GAAN,wDAA0DE,OAAO,CAACC,GAAR,CAAYG,0BAAtE,EAAP;AACD,GAXU;;AAaXC,EAAAA,QAAQ,EAAE,oBAAW;AACnB,WAAOX,KAAK,CAACI,GAAN,CAAU,YAAV,CAAP;AACD,GAfU;AAgBXQ,EAAAA,OAAO,EAAE,iBAASC,EAAT,EAAa;AACpB,WAAOb,KAAK,CAACI,GAAN,CAAU,gBAAgBS,EAA1B,CAAP;AACD,GAlBU;AAmBXC,EAAAA,SAAS,EAAE,mBAASC,QAAT,EAAmB;AAC5B,WAAOf,KAAK,CAACgB,IAAN,CAAW,YAAX,EAAyBD,QAAzB,CAAP;AACD,GArBU;AAsBXE,EAAAA,SAAS,EAAE,mBAASJ,EAAT,EAAaE,QAAb,EAAuB;AAChC,WAAOf,KAAK,CAACkB,GAAN,CAAU,gBAAgBL,EAA1B,EAA8BE,QAA9B,CAAP;AACD,GAxBU;;AAyBXI,EAAAA,WAAW,CAACN,EAAD,EAAK;AACd,WAAOb,KAAK,CAACoB,MAAN,CAAa,gBAAgBP,EAA7B,CAAP;AACD,GA3BU;;AA6BXQ,EAAAA,WAAW,EAAE,uBAAW;AACtB,WAAOrB,KAAK,CAACI,GAAN,CAAU,aAAV,CAAP;AACD,GA/BU;AAgCXkB,EAAAA,UAAU,EAAE,oBAAST,EAAT,EAAaU,UAAb,EAAyB;AACnC,WAAOvB,KAAK,CAACkB,GAAN,CAAU,gBAAgBL,EAA1B,EAA8BU,UAA9B,CAAP;AACD,GAlCU;AAmCXC,EAAAA,UAAU,EAAE,oBAASD,UAAT,EAAqB;AAC/B,WAAOvB,KAAK,CAACgB,IAAN,CAAW,aAAX,EAA0BO,UAA1B,CAAP;AACD,GArCU;;AAsCXE,EAAAA,YAAY,CAACZ,EAAD,EAAK;AACf,WAAOb,KAAK,CAACoB,MAAN,CAAa,iBAAiBP,EAA9B,CAAP;AACC;;AAxCQ,CAAf","sourcesContent":["import axios from \"axios\"\n// eslint-disable-next-line\nexport default {\n    // ZOMATO API CALL\n    getRestaurants(lat, lon){\n            return axios.get(`https://developers.zomato.com/api/v2.1/search?query=Chelsea&lat=${lat}&lon=${lon}&count=10`,{\n                headers: {\"user-key\": process.env.REACT_APP_ZOMATO_API_KEY}\n              });\n\n            },\n   // SeatGeek API Call  \n    getEvents(){\n      return axios.get(`https://api.seatgeek.com/2/events?&client_id=${process.env.REACT_APP_SEATGEEK_API_KEY}`)\n    },\n\n    getFoods: function() {\n      return axios.get(\"/api/foods\");\n    },\n    getFood: function(id) {\n      return axios.get(\"/api/foods/\" + id)\n    },\n    saveFoods: function(foodData) {\n      return axios.post(\"/api/foods\", foodData)\n    },\n    editFoods: function(id, foodData) {\n      return axios.put(\"/api/foods/\" + id, foodData)\n    },\n    deleteFoods(id) {\n      return axios.delete(\"/api/foods/\" + id)\n    },\n\n    getEventsDB: function() {\n      return axios.get(\"/api/events\");\n    },\n    editEvents: function(id, eventsData) {\n      return axios.put(\"/api/foods/\" + id, eventsData)\n    },\n    saveEvents: function(eventsData) {\n      return axios.post(\"/api/events\", eventsData)\n    },\n    deleteEvents(id) {\n      return axios.delete(\"/api/events/\" + id)\n      }\n    }\n"]},"metadata":{},"sourceType":"module"}