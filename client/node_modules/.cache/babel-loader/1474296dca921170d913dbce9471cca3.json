{"ast":null,"code":"var _jsxFileName = \"/Users/corrinepusillo/Downloads/axolotl/client/src/pages/Search.js\";\nimport React, { Component } from 'react';\nimport { Container, Card, Button, InputGroup, FormControl } from 'react-bootstrap';\nimport { FaSearchLocation } from 'react-icons/fa';\nimport API from \"../utils/API\";\nimport SearchResults from \"../components/SearchResults\";\nimport { geolocated } from \"react-geolocated\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      food: [],\n      events: [],\n      query: \"\",\n      latitude: \"\",\n      longitude: \"\"\n    };\n\n    this.handleButtonClick = () => {\n      console.log(this.state.latitude);\n      this.loadRestaurants(this.state.latitude, this.state.longitude);\n    };\n\n    this.loadRestaurants = () => {\n      API.getRestaurants(this.state.latitude, this.state.longitude).then(res => {\n        this.setState({\n          food: res.data\n        }); //console.log(this.state.food)\n      }).catch(err => console.log(err));\n    };\n\n    this.getLocation = async () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(this.showPosition);\n      } else {\n        console.log(\"Geolocation is not supported by this browser\");\n      }\n    };\n\n    this.showPosition = position => {\n      let lat = position.coords.latitude;\n      let lon = position.coords.longitude;\n      console.log(`Latitude: ${lat}`);\n      console.log(`Longitude: ${lon}`);\n      return [lat, lon];\n    };\n\n    this.setGeoLocation = (lat, lon) => {\n      this.setState({\n        latitude: lat,\n        longitude: lon\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getLocation();\n  } // ==== OnClick Handlers ==== //\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"w-100 text-center mt-2\",\n              children: \"Search for local food & entertainment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(InputGroup, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                placeholder: \"Tacos\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"secondary\",\n                  onClick: this.handleButtonClick,\n                  children: /*#__PURE__*/_jsxDEV(FaSearchLocation, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 18\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: \"mt-2 p-3\",\n          children: this.state.food.length != 0 ? /*#__PURE__*/_jsxDEV(SearchResults, {\n            results: this.state.food\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 18\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Nothing to see here! Try searching for some food!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/corrinepusillo/Downloads/axolotl/client/src/pages/Search.js"],"names":["React","Component","Container","Card","Button","InputGroup","FormControl","FaSearchLocation","API","SearchResults","geolocated","Search","state","food","events","query","latitude","longitude","handleButtonClick","console","log","loadRestaurants","getRestaurants","then","res","setState","data","catch","err","getLocation","navigator","geolocation","getCurrentPosition","showPosition","position","lat","coords","lon","setGeoLocation","componentDidMount","render","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Container, Card, Button, InputGroup, FormControl } from 'react-bootstrap'\nimport { FaSearchLocation } from 'react-icons/fa'\nimport API from \"../utils/API\"\nimport SearchResults from \"../components/SearchResults\"\nimport { geolocated } from \"react-geolocated\";\n\nclass Search extends Component {\n    state = { \n        food: [],\n        events: [],\n        query: \"\",\n        latitude: \"\",\n        longitude: \"\"     \n    }\n\n    componentDidMount(){\n        this.getLocation();\n    }\n        // ==== OnClick Handlers ==== //\n\n        handleButtonClick = () => {\n            console.log(this.state.latitude)\n            this.loadRestaurants(this.state.latitude, this.state.longitude);\n        }\n    // ==== API CALLS ==== //\n    \n    // ZOMATO API CALL\n    loadRestaurants = () => {\n        API.getRestaurants(this.state.latitude, this.state.longitude)\n          .then(res => {this.setState({food: res.data})\n              //console.log(this.state.food)\n        }).catch(err => console.log(err)) };\n\n    //  loadEvents = () => {\n    //      API.getEvents()\n    //      .then (res=> {\n    //          this.setState({\n    //              events: res.data\n    //          }) \n    //          console.log(this.state.events)\n    //      }\n    //         // setEvents(res.event)\n    //     )}   \n    //     // loadEvents();\n\n    // ==== GEOLOCATION METHODS ==== //\n    \n    getLocation = async () => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(this.showPosition);\n        } else {\n            console.log(\"Geolocation is not supported by this browser\")\n        }\n    }\n\n    showPosition = (position) => {\n        let lat = position.coords.latitude;\n        let lon = position.coords.longitude;\n        console.log(`Latitude: ${lat}`);\n        console.log(`Longitude: ${lon}`);\n        return [lat, lon];\n    }   \n\n    setGeoLocation = (lat, lon) => {\n        this.setState({latitude: lat, longitude: lon})\n    }\n        \n\nrender () {\n    return (\n        <>\n            <Container>\n            <Card>\n                <Card.Header>\n                    <h2 className=\"w-100 text-center mt-2\">Search for local food & entertainment</h2>\n                </Card.Header>\n                <Card.Body>\n                <InputGroup className=\"mb-3\">\n                <FormControl\n                placeholder=\"Tacos\"\n                />\n                <InputGroup.Append>\n                <Button \n                    variant=\"secondary\"\n                    onClick={this.handleButtonClick}\n                ><FaSearchLocation />\n                </Button>\n                </InputGroup.Append>\n                </InputGroup>\n                </Card.Body>\n\n            </Card>\n\n            <Card className=\"mt-2 p-3\">\n            {this.state.food.length != 0 ? (\n                 <SearchResults \n                     results={this.state.food} \n                 /> \n            ) : (\n            <div>\n                <p>Nothing to see here! Try searching for some food!</p>\n            </div>\n            )}\n            </Card>\n            </Container>\n\n        </>\n    )\n}}\n\nexport default Search\n"]},"metadata":{},"sourceType":"module"}