{"ast":null,"code":"var _jsxFileName = \"/Users/corrinepusillo/Downloads/axolotl/client/src/pages/Search.js\";\nimport React, { Component } from 'react';\nimport { Container, Card, Button, InputGroup, FormControl } from 'react-bootstrap';\nimport { FaSearchLocation } from 'react-icons/fa';\nimport API from \"../utils/API\";\nimport SearchResults from \"../components/SearchResults\";\nimport { geolocated } from \"react-geolocated\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      food: [],\n      events: [],\n      query: \"\",\n      latitude: \"\",\n      longitude: \"\"\n    };\n\n    this.getLocation = async () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(this.showPosition);\n      } else {\n        console.log(\"Geolocation is not supported by this browser\");\n      }\n    };\n\n    this.showPosition = position => {\n      let lat = position.coords.latitude;\n      let lon = position.coords.longitude;\n      return [lat, lon];\n    };\n\n    this.setGeoLocation = (lat, lon) => {\n      this.setState({\n        latitude: lat,\n        longitude: lon\n      });\n    };\n\n    this.handleButtonClick = () => {\n      this.loadRestaurants();\n    };\n  }\n\n  async componentDidMount() {//this.loadRestaurants();\n    // this.loadEvents()\n    //this.getLocation().then(this.setGeoLocation);\n  }\n\n  // ==== API CALLS ==== //\n  // ZOMATO API CALL\n  // loadRestaurants = () => {\n  //     API.getRestaurants()\n  //       .then(res => {this.setState({food: res.data})\n  //           console.log(this.state.food)\n  //     }\n  // )};\n  async loadRestaurants() {\n    try {\n      let res = await API.getRestaurants().then(res => {\n        this.setState({\n          food: res.data\n        });\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  } //  loadEvents = () => {\n  //      API.getEvents()\n  //      .then (res=> {\n  //          this.setState({\n  //              events: res.data\n  //          }) \n  //          console.log(this.state.events)\n  //      }\n  //         // setEvents(res.event)\n  //     )}   \n  //     // loadEvents();\n  // ==== GEOLOCATION METHODS ==== //\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"w-100 text-center mt-2\",\n              children: \"Search for local food & entertainment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(InputGroup, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                placeholder: \"Tacos\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"secondary\",\n                  onClick: this.handleButtonClick,\n                  children: /*#__PURE__*/_jsxDEV(FaSearchLocation, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 18\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: \"mt-2 p-3\",\n          children: [this.state.food, \" !== \\\"\\\" ?\", /*#__PURE__*/_jsxDEV(SearchResults, {\n            results: this.state.food\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this), \" :\", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Nothing to display here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/corrinepusillo/Downloads/axolotl/client/src/pages/Search.js"],"names":["React","Component","Container","Card","Button","InputGroup","FormControl","FaSearchLocation","API","SearchResults","geolocated","Search","state","food","events","query","latitude","longitude","getLocation","navigator","geolocation","getCurrentPosition","showPosition","console","log","position","lat","coords","lon","setGeoLocation","setState","handleButtonClick","loadRestaurants","componentDidMount","res","getRestaurants","then","data","err","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Container, Card, Button, InputGroup, FormControl } from 'react-bootstrap'\nimport { FaSearchLocation } from 'react-icons/fa'\nimport API from \"../utils/API\"\nimport SearchResults from \"../components/SearchResults\"\nimport { geolocated } from \"react-geolocated\";\n\nclass Search extends Component {\n    state = { \n        food: [],\n        events: [],\n        query: \"\",\n        latitude: \"\",\n        longitude: \"\"     \n    }\n   async componentDidMount() {\n        //this.loadRestaurants();\n        // this.loadEvents()\n        //this.getLocation().then(this.setGeoLocation);\n    };\n\n    // ==== API CALLS ==== //\n    \n    // ZOMATO API CALL\n    // loadRestaurants = () => {\n    //     API.getRestaurants()\n    //       .then(res => {this.setState({food: res.data})\n    //           console.log(this.state.food)\n    //     }\n    // )};\n\n    async loadRestaurants() {\n        try {\n            let res = await API.getRestaurants()\n            .then(res => {this.setState({food: res.data})})\n        }\n        catch(err) {\n            console.log(err);\n        }\n    }\n\n    //  loadEvents = () => {\n    //      API.getEvents()\n    //      .then (res=> {\n    //          this.setState({\n    //              events: res.data\n    //          }) \n    //          console.log(this.state.events)\n    //      }\n    //         // setEvents(res.event)\n    //     )}   \n    //     // loadEvents();\n\n    // ==== GEOLOCATION METHODS ==== //\n    \n    getLocation = async () => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(this.showPosition);\n        } else {\n            console.log(\"Geolocation is not supported by this browser\")\n        }\n    }\n\n    showPosition = (position) => {\n        let lat = position.coords.latitude;\n        let lon = position.coords.longitude;\n        return [lat, lon];\n    }   \n\n    setGeoLocation = (lat, lon) => {\n        this.setState({latitude: lat, longitude: lon})\n    }\n        \n    // ==== OnClick Handlers ==== //\n\n    handleButtonClick = () => {\n        this.loadRestaurants();\n    }\n\n\nrender () {\n    return (\n        <>\n            <Container>\n            <Card>\n                <Card.Header>\n                    <h2 className=\"w-100 text-center mt-2\">Search for local food & entertainment</h2>\n                </Card.Header>\n                <Card.Body>\n                <InputGroup className=\"mb-3\">\n                <FormControl\n                placeholder=\"Tacos\"\n                />\n                <InputGroup.Append>\n                <Button \n                    variant=\"secondary\"\n                    onClick={this.handleButtonClick}\n                ><FaSearchLocation />\n                </Button>\n                </InputGroup.Append>\n                </InputGroup>\n                </Card.Body>\n\n\n            </Card>\n\n            <Card className=\"mt-2 p-3\">\n                {this.state.food} !== \"\" ? \n                <SearchResults \n                results={this.state.food} \n                /> :\n                <p>Nothing to display here</p>\n            </Card>\n            </Container>\n\n        </>\n    )\n}}\n\nexport default Search\n"]},"metadata":{},"sourceType":"module"}