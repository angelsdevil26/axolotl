{"ast":null,"code":"import _regeneratorRuntime from \"/Users/corrinepusillo/Desktop/AXOLOTL WORKING/axolotl/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/corrinepusillo/Desktop/AXOLOTL WORKING/axolotl/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/corrinepusillo/Desktop/AXOLOTL WORKING/axolotl/client/src/pages/Search.js\";\nimport React, { Component } from 'react';\nimport { Container, Card, Button, InputGroup, FormControl, ProgressBar } from 'react-bootstrap';\nimport { FaSearchLocation, FaCheckSquare } from 'react-icons/fa';\nimport API from \"../utils/API\";\nimport SearchResults from \"../components/SearchResults\";\nimport EventsResults from \"../components/EventsResults\";\nimport './search.css';\n\nclass Search extends Component {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.state = {\n      food: [],\n      events: [],\n      results: [],\n      query: \"\",\n      lat: \"\",\n      lon: \"\",\n      searchMode: \"restaurants\"\n    };\n\n    this.handleButtonClick = () => {//   \n    };\n\n    this.handleInputChange = event => {\n      this.setState({\n        query: event.target.value\n      });\n      const _this$state = this.state,\n            food = _this$state.food,\n            events = _this$state.events,\n            query = _this$state.query,\n            results = _this$state.results,\n            searchMode = _this$state.searchMode;\n\n      if (searchMode === \"restaurants\") {\n        if (query == \"\") {\n          console.log(\"Blank query\");\n          return;\n        } else {\n          console.log(\"Non blank query\");\n          const results = food.filter(food => food.toLowerCase().includes(query.toLowerCase()));\n          this.setState({\n            results\n          });\n        }\n      } else if (searchMode === \"events\") {\n        return;\n      }\n    };\n\n    this.handleEventButtonClick = () => {\n      this.setState({\n        searchMode: \"events\"\n      });\n      this.loadEvents();\n    };\n\n    this.handleRestaurantsButtonClick = () => {\n      this.setState({\n        searchMode: \"restaurants\"\n      });\n      this.loadRestaurants(this.state.latitude, this.state.longitude);\n    };\n\n    this.loadRestaurants = () => {\n      API.getRestaurants(this.state.lat, this.state.lon).then(res => {\n        this.setState({\n          food: res.data\n        }); //console.log(this.state.food)\n      }).catch(err => console.log(err));\n    };\n\n    this.loadEvents = () => {\n      API.getEvents().then(res => {\n        this.setState({\n          events: res.data\n        }); // console.log(this.state.events)\n      }).catch(err => console.log(err));\n    };\n\n    this.getLocation = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            if (navigator.geolocation) {\n              navigator.geolocation.getCurrentPosition(_this.showPosition);\n            } else {\n              console.log(\"Geolocation is not supported by this browser\");\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    this.showPosition = position => {\n      let lat = position.coords.latitude;\n      let lon = position.coords.longitude;\n      this.setGeoLocation(lat, lon);\n    };\n\n    this.setGeoLocation = (lat, lon) => {\n      this.setState({\n        lat: lat,\n        lon: lon\n      });\n      console.log(\"Latitude: \".concat(lat));\n      console.log(\"Longitude: \".concat(lon));\n    };\n\n    this.saveFoods = foodData => {\n      API.saveFoods({\n        id: foodData.id,\n        name: foodData.name,\n        cuisines: foodData.cuisines,\n        address: foodData.address,\n        menu_url: foodData.menu_url,\n        timings: foodData.timings\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getLocation();\n  } // ==== Handlers ==== //\n\n\n  render() {\n    // console.log(this.state.searchMode)\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n      id: \"main-container\",\n      className: \"glassy-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"w-100 text-center mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, \"Search for local food & entertainment\")), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleRestaurantsButtonClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, \"Restaurants\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleEventButtonClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, \"Events\"), /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-3\",\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      className: \"wrapper\",\n      placeholder: \"Tacos\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\" //onClick={this.handleButtonClick}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FaSearchLocation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 18\n      }\n    })))))), /*#__PURE__*/React.createElement(Card, {\n      className: \"mt-2 p-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, this.state.food.length !== 0 ? /*#__PURE__*/React.createElement(SearchResults, {\n      results: this.state.food,\n      saveFoods: this.saveFoods,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 18\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    })), !this.state.lat && !this.state.lon ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, \"Hold on, we're looking for your location\"), /*#__PURE__*/React.createElement(ProgressBar, {\n      variant: \"success\",\n      animated: true,\n      now: 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    })) : /*#__PURE__*/React.createElement(\"p\", {\n      className: \"green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FaCheckSquare, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 38\n      }\n    }), \"  Ready to search!\"), this.state.events.length !== 0 ? /*#__PURE__*/React.createElement(EventsResults, {\n      results: this.state.events,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 18\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/corrinepusillo/Desktop/AXOLOTL WORKING/axolotl/client/src/pages/Search.js"],"names":["React","Component","Container","Card","Button","InputGroup","FormControl","ProgressBar","FaSearchLocation","FaCheckSquare","API","SearchResults","EventsResults","Search","state","food","events","results","query","lat","lon","searchMode","handleButtonClick","handleInputChange","event","setState","target","value","console","log","filter","toLowerCase","includes","handleEventButtonClick","loadEvents","handleRestaurantsButtonClick","loadRestaurants","latitude","longitude","getRestaurants","then","res","data","catch","err","getEvents","getLocation","navigator","geolocation","getCurrentPosition","showPosition","position","coords","setGeoLocation","saveFoods","foodData","id","name","cuisines","address","menu_url","timings","componentDidMount","render","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Container, Card, Button, InputGroup, FormControl, ProgressBar } from 'react-bootstrap'\nimport { FaSearchLocation, FaCheckSquare } from 'react-icons/fa'\nimport API from \"../utils/API\"\nimport SearchResults from \"../components/SearchResults\"\nimport EventsResults from \"../components/EventsResults\"\nimport './search.css';\n\nclass Search extends Component {\n    state = { \n        food: [],\n        events: [],\n        results: [],\n        query: \"\",\n        lat: \"\",\n        lon: \"\",\n        searchMode: \"restaurants\", \n    }\n\n    componentDidMount(){\n        this.getLocation();\n    }\n\n    // ==== Handlers ==== //\n\n    handleButtonClick = () => {\n    //   \n    }\n\n    handleInputChange = event => {\n        this.setState({query: event.target.value})\n        const { food, events, query, results, searchMode} = this.state;\n\n        if (searchMode === \"restaurants\") {\n\n            if (query == \"\"){\n                console.log(\"Blank query\")\n                return;\n            }\n            else {\n                console.log(\"Non blank query\")\n                const results = food.filter(food => food.toLowerCase().includes(query.toLowerCase()))\n                this.setState({results})\n            }\n        }\n\n        else if (searchMode === \"events\") {\n            return;\n        }\n\n    }\n    \n    handleEventButtonClick = () => {\n        this.setState({searchMode: \"events\"})\n        this.loadEvents()\n    }\n\n    handleRestaurantsButtonClick = () => {\n        this.setState({searchMode: \"restaurants\"})\n        this.loadRestaurants(this.state.latitude, this.state.longitude)\n    }\n    // ==== API CALLS ==== //\n    \n    // ZOMATO API CALL\n    loadRestaurants = () => {\n        API.getRestaurants(this.state.lat, this.state.lon)\n          .then(res => {this.setState({food: res.data})\n              //console.log(this.state.food)\n        }).catch(err => console.log(err)) };\n\n     loadEvents = () => {\n         API.getEvents()\n         .then (res=> {this.setState({events: res.data}) \n                // console.log(this.state.events)\n         }).catch(err =>console.log(err))\n};\n\n    // ==== GEOLOCATION METHODS ==== //\n    \n    getLocation = async () => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(this.showPosition);\n        } else {\n            console.log(\"Geolocation is not supported by this browser\")\n        }\n    }\n\n    showPosition = (position) => {\n        let lat = position.coords.latitude;\n        let lon = position.coords.longitude;\n        this.setGeoLocation(lat,lon)\n    }   \n\n    setGeoLocation = (lat, lon) => {\n        this.setState({lat: lat, lon: lon})\n        console.log(`Latitude: ${lat}`);\n        console.log(`Longitude: ${lon}`);\n    }\n\n        // ==== INTERNAL API METHODS ==== //\n\n        saveFoods = foodData => {\n            API.saveFoods({\n                id: foodData.id,\n                name: foodData.name,\n                cuisines: foodData.cuisines,\n                address: foodData.address,\n                menu_url: foodData.menu_url,\n                timings: foodData.timings\n            })\n        }\n    \n        \n\nrender(){\n    // console.log(this.state.searchMode)\n\n    return (\n        <>\n            <Container id=\"main-container\" className=\"glassy-text\" >\n            <Card>\n                <Card.Header>\n                    <h2 className=\"w-100 text-center mt-2\">Search for local food & entertainment</h2>\n                </Card.Header>\n                <Card.Body>\n                <Button onClick={this.handleRestaurantsButtonClick}>\n                    Restaurants\n                </Button>\n                <Button onClick={this.handleEventButtonClick}>\n                    Events\n                </Button>\n                <InputGroup className=\"mb-3\" onChange={this.handleInputChange}>\n                <FormControl className=\"wrapper\"\n                placeholder=\"Tacos\"\n                />\n                <InputGroup.Append>\n                <Button \n                    variant=\"secondary\"\n                    //onClick={this.handleButtonClick}\n                ><FaSearchLocation />\n                </Button>\n                </InputGroup.Append>\n                </InputGroup>\n                </Card.Body>\n\n            </Card>\n\n            <Card className=\"mt-2 p-3\">\n            {this.state.food.length !== 0 ? (\n                 <SearchResults \n                     results={this.state.food} \n                     saveFoods={this.saveFoods}\n                 /> \n            ) : (\n                <div>\n                <p></p>\n\n            </div>\n            )}\n            {!this.state.lat && !this.state.lon ? (\n                <div>\n                <p>Hold on, we're looking for your location</p>\n                <ProgressBar variant=\"success\" animated now={100} />\n                </div>\n            ) : (\n                <p className=\"green\"><FaCheckSquare/>  Ready to search!</p>\n            )}\n            {this.state.events.length !== 0 ? (\n                 <EventsResults \n                     results={this.state.events} \n                 /> \n            ) : (\n                <div>\n                <p></p>\n\n            </div>\n            )}\n            \n            </Card>\n            </Container>\n\n        </>\n    )\n}}\n\nexport default Search\n"]},"metadata":{},"sourceType":"module"}