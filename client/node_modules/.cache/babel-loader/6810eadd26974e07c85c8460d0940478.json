{"ast":null,"code":"var _jsxFileName = \"/Users/britneyb/Documents/Rutgers/Projects/axolotl/client/src/components/Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { Card, Form, Button, Alert, Container } from 'react-bootstrap';\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Link, useHistory } from 'react-router-dom';\nimport \"./signup.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Signup() {\n  _s();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const {\n    signup\n  } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory(); // aysnchronous function for handling the submit form event in our render().\n\n  async function handleSubmit(e) {\n    // prevent the form fields from emptying on submit.\n    e.preventDefault(); // determine if the password value matches the password confirm value.\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match!\");\n    } // try to signup and catch the error.\n\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await signup(emailRef.current.value, passwordRef.current.value); //pass email and password to our signup function\n\n      history.push(\"/\"); // \"push\" our user to the root page if signup is successful.\n    } catch {\n      setError(\"Failed to create an account, check password length & complexity.\");\n    }\n\n    setLoading(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      id: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        id: \"card\",\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          id: \"sign-up\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            id: \"head\",\n            className: \"text-center mb-3\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"danger\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              id: \"email\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"email\",\n                ref: emailRef,\n                placeholder: \"you@email.com\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              id: \"password\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                ref: passwordRef,\n                placeholder: \"********\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              id: \"password-confirm\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Confirm Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                ref: passwordConfirmRef,\n                placeholder: \"********\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              disabled: loading,\n              className: \"w-100\",\n              type: \"submit\",\n              variant: \"success\",\n              children: \"Sign Up!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"sign\",\n      className: \"w-100 text-center mt-2\",\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Signup, \"D4T5tU/nLsx1xlI7M1dcY2R6at8=\", false, function () {\n  return [useAuth, useHistory];\n});\n\n_c = Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/britneyb/Documents/Rutgers/Projects/axolotl/client/src/components/Signup.js"],"names":["React","useRef","useState","Card","Form","Button","Alert","Container","useAuth","Link","useHistory","Signup","emailRef","passwordRef","passwordConfirmRef","signup","error","setError","loading","setLoading","history","handleSubmit","e","preventDefault","current","value","push"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react'\nimport { Card, Form, Button, Alert, Container} from 'react-bootstrap'\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link, useHistory } from 'react-router-dom'\nimport \"./signup.css\";\nexport default function Signup(){\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const passwordConfirmRef = useRef()\n    const { signup } = useAuth()\n    const [error, setError] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const history = useHistory();\n\n// aysnchronous function for handling the submit form event in our render().\nasync function handleSubmit(e){\n        // prevent the form fields from emptying on submit.\n        e.preventDefault()\n\n        // determine if the password value matches the password confirm value.\n        if(passwordRef.current.value !== passwordConfirmRef.current.value){\n            return setError(\"Passwords do not match!\")\n        }\n\n        // try to signup and catch the error.\n        try{\n            setError(\"\")\n            setLoading(true)\n            await signup(emailRef.current.value, passwordRef.current.value) //pass email and password to our signup function\n            history.push(\"/\") // \"push\" our user to the root page if signup is successful.\n        } catch {\n            setError(\"Failed to create an account, check password length & complexity.\")\n        }\n\n        setLoading(false)\n    }\n\n    return (\n        <>\n    <Container id=\"container\">\n    <Card id=\"card\">\n        <Card.Body id=\"sign-up\">\n            <h2 id=\"head\" className=\"text-center mb-3\">Sign Up</h2>\n\n            {/* If there is an error with handleSubmit show it as a red alert */}\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            \n            <Form onSubmit={handleSubmit}>\n                <Form.Group id=\"email\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control type=\"email\" ref={emailRef} placeholder=\"you@email.com\" required />\n                </Form.Group>\n\n                <Form.Group id=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" ref={passwordRef} placeholder=\"********\" required />\n                </Form.Group>\n\n                <Form.Group id=\"password-confirm\">\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control type=\"password\" ref={passwordConfirmRef} placeholder=\"********\" required />\n                </Form.Group>\n                <Button disabled={loading} className=\"w-100\" type=\"submit\" variant=\"success\">Sign Up!</Button>\n            </Form>\n            \n        </Card.Body>\n    </Card>\n    </Container>\n    <div id=\"sign\" className=\"w-100 text-center mt-2\">\n        Already have an account? <Link to=\"/login\">Login</Link>\n        \n    </div>\n    \n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}