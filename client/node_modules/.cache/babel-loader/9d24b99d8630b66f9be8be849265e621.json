{"ast":null,"code":"var _jsxFileName = \"/Users/corrinepusillo/Downloads/axolotl/client/src/pages/Search.js\";\nimport React, { Component } from 'react';\nimport { Container, Card, Button, InputGroup, FormControl } from 'react-bootstrap';\nimport { FaSearchLocation } from 'react-icons/fa';\nimport API from \"../utils/API\";\nimport SearchResults from \"../components/SearchResults\";\nimport { geolocated } from \"react-geolocated\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      food: [],\n      events: [],\n      query: \"\",\n      latitude: \"\",\n      longitude: \"\"\n    };\n\n    this.loadRestaurants = () => {\n      API.getRestaurants().then(res => {\n        this.setState({\n          food: res.data\n        }); //console.log(this.state.food);\n      });\n    };\n  }\n\n  componentDidMount() {\n    //this.loadRestaurants();\n    // this.loadEvents()\n    this.getLocation();\n  }\n\n  //  loadEvents = () => {\n  //      API.getEvents()\n  //      .then (res=> {\n  //          this.setState({\n  //              events: res.data\n  //          }) \n  //          console.log(this.state.events)\n  //      }\n  //         // setEvents(res.event)\n  //     )}   \n  //     // loadEvents();\n  getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(this.showPosition);\n    } else {\n      console.log(\"Geolocation is not supported by this browser\");\n    }\n  }\n\n  showPosition(position) {\n    this.setState({\n      latitude: position.coords.latitude,\n      longitude: position.coords.longitude\n    });\n    console.log(\"Latitude: \" + this.state.latitude);\n    console.log(\"Longitude: \" + this.state.longitude);\n  } // getLocation = async () => {\n  //     let options = {\n  //         timeout: 5000,\n  //         maximumAge: 0\n  //       };\n  //       function success(pos) {\n  //         var crd = pos.coords;\n  //         console.log(`Latitude : ${crd.latitude}`);\n  //         console.log(`Longitude: ${crd.longitude}`);\n  //       }\n  //       function error(err) {\n  //         console.warn(`ERROR(${err.code}): ${err.message}`);\n  //       }\n  //       navigator.geolocation.getCurrentPosition(success, error, options);\n  //     }\n  //     handleButtonClick = e => {\n  //         this.loadRestaurants();\n  //     }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"w-100 text-center mt-2\",\n              children: \"Search for local food & entertainment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(InputGroup, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                placeholder: \"Tacos\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"secondary\",\n                  onClick: this.handleButtonClick,\n                  children: /*#__PURE__*/_jsxDEV(FaSearchLocation, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 18\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: \"mt-2 p-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/corrinepusillo/Downloads/axolotl/client/src/pages/Search.js"],"names":["React","Component","Container","Card","Button","InputGroup","FormControl","FaSearchLocation","API","SearchResults","geolocated","Search","state","food","events","query","latitude","longitude","loadRestaurants","getRestaurants","then","res","setState","data","componentDidMount","getLocation","navigator","geolocation","getCurrentPosition","showPosition","console","log","position","coords","render","handleButtonClick"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Container, Card, Button, InputGroup, FormControl } from 'react-bootstrap'\nimport { FaSearchLocation } from 'react-icons/fa'\nimport API from \"../utils/API\"\nimport SearchResults from \"../components/SearchResults\"\nimport { geolocated } from \"react-geolocated\";\n\nclass Search extends Component {\n    state={\n        food: [],\n        events: [],\n        query: \"\",\n        latitude: \"\",\n        longitude: \"\"     \n    }\n    componentDidMount() {\n        //this.loadRestaurants();\n        // this.loadEvents()\n        this.getLocation();\n    };\n    \n    // ZOMATO API CALL\n    loadRestaurants = () => {\n        API.getRestaurants()\n          .then(res => {\n              this.setState({\n                  food: res.data\n              })\n              //console.log(this.state.food);\n          }\n          )};\n\n    //  loadEvents = () => {\n    //      API.getEvents()\n    //      .then (res=> {\n    //          this.setState({\n    //              events: res.data\n    //          }) \n    //          console.log(this.state.events)\n    //      }\n    //         // setEvents(res.event)\n    //     )}   \n    //     // loadEvents();\n    \n\n    getLocation() {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(this.showPosition);\n        } else {\n            console.log(\"Geolocation is not supported by this browser\")\n        }\n    }\n\n    showPosition(position) {\n        this.setState({\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude\n        })\n        console.log(\"Latitude: \" + this.state.latitude)\n        console.log(\"Longitude: \" + this.state.longitude)\n    }\n\n    // getLocation = async () => {\n    //     let options = {\n    //         timeout: 5000,\n    //         maximumAge: 0\n    //       };\n          \n    //       function success(pos) {\n    //         var crd = pos.coords;\n\n    //         console.log(`Latitude : ${crd.latitude}`);\n    //         console.log(`Longitude: ${crd.longitude}`);\n\n    //       }\n          \n    //       function error(err) {\n    //         console.warn(`ERROR(${err.code}): ${err.message}`);\n    //       }\n          \n    //       navigator.geolocation.getCurrentPosition(success, error, options);\n          \n    //     }\n\n    //     handleButtonClick = e => {\n    //         this.loadRestaurants();\n    //     }\n    \n        \nrender () {\n    return (\n        <>\n            <Container>\n            <Card>\n                <Card.Header>\n                    <h2 className=\"w-100 text-center mt-2\">Search for local food & entertainment</h2>\n                </Card.Header>\n                <Card.Body>\n                <InputGroup className=\"mb-3\">\n                <FormControl\n                placeholder=\"Tacos\"\n                />\n                <InputGroup.Append>\n                <Button \n                    variant=\"secondary\"\n                    onClick={this.handleButtonClick}\n                ><FaSearchLocation />\n                </Button>\n                </InputGroup.Append>\n                </InputGroup>\n                </Card.Body>\n\n\n            </Card>\n\n            <Card className=\"mt-2 p-3\">\n                {/* <SearchResults \n                results={this.state.food} \n                /> */}\n            </Card>\n            </Container>\n\n        </>\n    )\n}}\n\nexport default Search\n"]},"metadata":{},"sourceType":"module"}