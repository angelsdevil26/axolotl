{"ast":null,"code":"var _jsxFileName = \"/Users/britneyb/Documents/Rutgers/Projects/axolotl/client/src/components/PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\nexport default function PrivateRoute({\n  component: Component,\n  ...rest\n}) {\n  _s();\n\n  const {\n    currentUser\n  } = useAuth();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      // if we have a current user render our props inside of Dashboard.js, else push user to the login page.\n      return currentUser ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 38\n        }\n      })) : /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 65\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  })));\n}\n\n_s(PrivateRoute, \"byfRDkJ+t3MKhIwXgwbXYFaZtD0=\", false, function () {\n  return [useAuth];\n});\n\n_c = PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/britneyb/Documents/Rutgers/Projects/axolotl/client/src/components/PrivateRoute.js"],"names":["React","Route","Redirect","useAuth","PrivateRoute","component","Component","rest","currentUser","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,yBAAxB;AAEA,eAAe,SAASC,YAAT,CAAsB;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAtB,EAAyD;AAAA;;AACpE,QAAM;AAAEC,IAAAA;AAAF,MAAkBL,OAAO,EAA/B;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD,oBAAWI,IAAX;AACA,IAAA,MAAM,EAAEE,KAAK,IAAI;AACb;AACA,aAAOD,WAAW,gBAAG,oBAAC,SAAD,oBAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAH,gBAA8B,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhD;AACH,KAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,CADJ;AAWH;;GAduBL,Y;UACID,O;;;KADJC,Y","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from \"react-router-dom\"\nimport { useAuth } from \"../contexts/AuthContext\"\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n    const { currentUser } = useAuth()\n\n    return (\n        <div>\n            <Route {...rest}\n            render={props => {\n                // if we have a current user render our props inside of Dashboard.js, else push user to the login page.\n                return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\n            }}>\n\n            </Route>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}