{"ast":null,"code":"import _regeneratorRuntime from \"/Users/corrinepusillo/Desktop/axolotl/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/corrinepusillo/Desktop/axolotl/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/corrinepusillo/Desktop/axolotl/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/corrinepusillo/Desktop/axolotl/client/src/components/ForgotPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { Card, Form, Button, Alert } from 'react-bootstrap';\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ForgotPassword() {\n  _s();\n\n  const emailRef = useRef();\n\n  const _useAuth = useAuth(),\n        resetPassword = _useAuth.resetPassword;\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        error = _useState2[0],\n        setError = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        message = _useState6[0],\n        setMessage = _useState6[1];\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n            _context.prev = 1;\n            setMessage(\"\");\n            setError(\"\");\n            setLoading(true);\n            _context.next = 7;\n            return resetPassword(emailRef.current.value);\n\n          case 7:\n            setMessage(\"Success! Check your inbox for further instructions\");\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](1);\n            setError(\"Failed to reset password\"); // if we do not have record of the email, send this message.\n\n          case 13:\n            setLoading(false);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[1, 10]]);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center mb-3\",\n          children: \"Password Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 23\n        }, this), message && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"success\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              ref: emailRef,\n              placeholder: \"you@email.com\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: loading,\n            className: \"w-100\",\n            type: \"submit\",\n            variant: \"success\",\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-100 text-center mt-3\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: \"Or, Login instead\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 text-center mt-2\",\n      children: [\"Don't have an account? What are you waiting for? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        children: \"Sign up!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 58\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ForgotPassword, \"WbpzdPk7hirWFhzmTYyz6zLMaJU=\", false, function () {\n  return [useAuth];\n});\n\n_c = ForgotPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["/Users/corrinepusillo/Desktop/axolotl/client/src/components/ForgotPassword.js"],"names":["React","useRef","useState","Card","Form","Button","Alert","useAuth","Link","ForgotPassword","emailRef","resetPassword","error","setError","loading","setLoading","message","setMessage","handleSubmit","e","preventDefault","current","value"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react'\nimport { Card, Form, Button, Alert } from 'react-bootstrap'\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link } from 'react-router-dom'\n\nexport default function ForgotPassword(){\n    const emailRef = useRef()\n    const { resetPassword } = useAuth()\n    const [error, setError] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [message, setMessage] = useState()\n\nasync function handleSubmit(e){\n        e.preventDefault()\n\n        try{\n            setMessage(\"\")\n            setError(\"\")\n            setLoading(true)\n            await resetPassword(emailRef.current.value)\n            setMessage(\"Success! Check your inbox for further instructions\")\n        } catch {\n            setError(\"Failed to reset password\") // if we do not have record of the email, send this message.\n        }\n\n        setLoading(false)\n    }\n\n    return (\n        <>\n    <Card>\n        <Card.Body>\n            <h2 className=\"text-center mb-3\">Password Reset</h2>\n            {/* If there is an error with handleSubmit show it as a red alert */}\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            {/* If there is an account associated with the email show a successful message*/}\n            {message && <Alert variant=\"success\">{message}</Alert>}\n            <Form onSubmit={handleSubmit}>\n                <Form.Group id=\"email\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control type=\"email\" ref={emailRef} placeholder=\"you@email.com\" required />\n                </Form.Group>\n\n                <Button disabled={loading} className=\"w-100\" type=\"submit\" variant=\"success\">Reset Password</Button>\n            </Form>\n            <div className=\"w-100 text-center mt-3\">\n                <Link to=\"/login\">Or, Login instead</Link>\n            </div>\n        </Card.Body>\n    </Card>\n    <div className=\"w-100 text-center mt-2\">\n        Don't have an account? What are you waiting for? <Link to=\"/signup\" >Sign up!</Link>\n    </div>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}